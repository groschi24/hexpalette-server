version: "3.6"

services:
  # Authtentication Service
  auth_service:
    build: ./auth-service
    container_name: "auth_service"
    environment:
      - MONGO_LOCAL_CONN_URL=mongodb://production:secret_password@auth_db:27017/?authSource=admin&readPreference=primary&ssl=false
      - JWT_SECRET=jwt-secret
      - PORT=3000
      - WAIT_HOSTS=auth_db:27017
      - WAIT_HOSTS_TIMEOUT=100
      - WAIT_BEFORE_HOSTS=5
      - SWAGGER_USERNAME=admin
      - SWAGGER_PASSWORD=secret_password
      - SENDGRID_API_KEY=sendgrid_key
    links:
      - auth_db
    depends_on:
      - auth_db
  auth_db:
    image: mongo
    container_name: "auth_db"
    environment:
      - MONGO_INITDB_DATABASE=authdb
      - MONGO_INITDB_ROOT_USERNAME=production
      - MONGO_INITDB_ROOT_PASSWORD=secret_password
    volumes:
      - ./.docker/mongo-volumes/auth_db:/data/db
    restart: unless-stopped

  # Holds the Informations of the Files hosted on the Storage Service
  color_service:
    build: ./color-service
    container_name: "color_service"
    environment:
      - MONGO_LOCAL_CONN_URL=mongodb://production:secret_password@color_db:27017/?authSource=admin&readPreference=primary&ssl=false
      - PORT=3000
      - AUTH_SERVER_HOST=auth_service:3000
      - WAIT_HOSTS=color_db:27017
      - WAIT_HOSTS_TIMEOUT=100
      - WAIT_BEFORE_HOSTS=5
      - SWAGGER_USERNAME=admin
      - SWAGGER_PASSWORD=secret_password
    links:
      - color_db
    depends_on:
      - color_db
  color_db:
    image: mongo
    container_name: "color_db"
    environment:
      - MONGO_INITDB_DATABASE=colordb
      - MONGO_INITDB_ROOT_USERNAME=production
      - MONGO_INITDB_ROOT_PASSWORD=secret_password
    volumes:
      - ./.docker/mongo-volumes/color_db:/data/db
    restart: unless-stopped

  # The Gateway for all API Containers
  gateway:
    build: ./gateway
    container_name: "gateway"
    links:
      - auth_service
      - color_service
    environment:
      - WAIT_HOSTS=color_service:3000, auth_service:3000
      - WAIT_HOSTS_TIMEOUT=160
      - WAIT_BEFORE_HOSTS=10

  #### NGINX ####

  frontend:
    build:
        context: ./hexpalette
        args:
          - API_URL=api.hexpalette.com/api

  client:
    image: nginx:1.16-alpine
    container_name: client
    volumes:
      - ./nginx/frontend/default.conf:/etc/nginx/conf.d/default.conf

  reverse-proxy:
    image: valian/docker-nginx-auto-ssl:1.0.0
    container_name: reverse-proxy
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.ssl-data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: "(api.)?hexpalette.com"
      SITES: "hexpalette.com=client:80;api.hexpalette.com=gateway:8080;"
      FORCE_HTTPS: "true"
    depends_on:
      - client
      - gateway

volumes:
  .ssl-data:
